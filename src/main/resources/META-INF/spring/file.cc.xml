<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">


    <routeContext xmlns="http://camel.apache.org/schema/spring" id="file">

        <route id="edifact2xml" errorHandlerRef="deadLetterErrorHandler" autoStartup="true">
            <from uri="file:{{fs.root}}/edifact2xml.in/" />
            <process ref="edifact2xml" />
            <to uri="file:{{fs.root}}/edifact2xml.out/" />
        </route>

        <route id="xml2edifact" errorHandlerRef="deadLetterErrorHandler" autoStartup="true">
          <from uri="file:{{fs.root}}/xml2edifact.in/" />
          <process ref="xml2edifact" />
          <to uri="file:{{fs.root}}/xml2edifact.out/" />
        </route>


        <route id="xsltExtensionFunctionsTest" errorHandlerRef="deadLetterErrorHandler" autoStartup="true">
            <from uri="file:{{fs.root}}/xslt-test.in/" />
                <to uri="xslt-saxon:file:data/mappings/tests/extensionFunctions.xslt?saxonExtensionFunctions=#translate,#log" />
            <to uri="file:{{fs.root}}/xslt-test.out/" />
        </route>



        <route id="demoRoutingSlip" errorHandlerRef="deadLetterErrorHandler" autoStartup="true">
            <from uri="file:{{fs.root}}/routingSlipIn/" />
                <setHeader name="X-MESCEDIA-RoutingSlipDemo">
                    <simple>bean:org.mescedia.processors.Edifact2Xml§xslt-saxon:file:data/mappings/tests/extensionFunctions.xslt?saxonExtensionFunctions=#translate,#log </simple>
                </setHeader>
                <log message="processing routingSlip: ${header.X-MESCEDIA-RoutingSlipDemo}" />
                <routingSlip uriDelimiter="§" ignoreInvalidEndpoints="false">
                    <header>X-MESCEDIA-RoutingSlipDemo</header>
                </routingSlip>
                <log message="header.Transaction-Id: ${header.Transaction-Id}" />
            <to uri="file:{{fs.root}}/routingSlipOut/?fileName=${date:now:yyyyMMddHHmmssSSS}-${header.Transaction-Id}" />
        </route>


        <!-- polling only in folders in ftps user path -> /opt/COM/ftps/$user/in/ -->
        <route id="allFtpsInFolders" errorHandlerRef="deadLetterErrorHandler" autoStartup="true" >
            <from uri="file:///opt/COM/ftps/?recursive=true&amp;antInclude=**/in**/*&amp;minDepth=2&amp;maxDepth=3" />


                <log message="CamelFileNameOnly: ${header.CamelFileNameOnly} " />
                <log message="CamelFileParent: ${header.CamelFileParent} " />
                <log message="Searching rule for [Path: ${header.CamelFileParent} - FileName: ${header.CamelFileNameOnly}]" />



                <log message="messageHistory: ${messageHistory(true)} " />


                <!--
                    get workflow -switch ( genericRouter, PatternRouter, directRoute )
                    fnr: getProcessstepByFileNamePattern

                          - senderId (Pattern)
                          - senderPattern

                          - receiverId
                          - receiverPattern

                          - MsgFormat, MsgType, MsgVersion

                    gr: runAnalyser: returns SenderId, ReceiverId, MsgFormat, MsgType, MsgVersion
                        rubnProcessingRules: (edifact2Xml, ORDERS2XML Maopping, UTF-8 to ISO-8859-1)
                        toDestination

                -->


            <to uri="mock:devnull"/>
        </route>

    </routeContext>

</beans>
